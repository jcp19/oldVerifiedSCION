package layers

import (
	"gobra/dependencies/gopacket"

	"gobra/verifyutils"
)

type BaseLayer struct {
	Contents []byte
	Payload []byte
}

pred (b *BaseLayer) IsLayerContents(data []byte)

// Returns a slice for which we have write permissions.
// Obtaining read permissions to the slice should be accomplished with a new function.
preserves acc(&b.Contents, 1/1000)
requires  verifyutils.BytesAcc(b.Contents)
ensures   verifyutils.BytesAcc(data) && b.IsLayerContents(data)
func (b *BaseLayer) LayerContents() (data []byte) { return b.Contents }

pred (b *BaseLayer) IsLayerPayload(data []byte)

// Returns a slice for which we have write permissions.
// Obtaining read permissions to the slice should be accomplished with a new function.
preserves acc(&b.Payload, 1/1000)
requires  verifyutils.BytesAcc(b.Payload)
ensures   verifyutils.BytesAcc(data) && b.IsLayerPayload(data)
func (b *BaseLayer) LayerPayload(ghost p perm) (data []byte) { return b.Payload }