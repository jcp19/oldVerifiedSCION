package iospec

import (
    . "gobra/io_verification/place"
    . "gobra/io_verification/abstract"
)

// readBatch (BIO)
pred readBatch_p(ghost t Place)

ghost
requires readBatch_p(t)
pure func get_readBatch_t1(t Place) (t1 Place)

ghost
requires readBatch_p(t)
pure func get_readBatch_msgs(t Place) (msgs seq[AbsMessage])

// writeBatch (BIO)
pred writeBatch_p(ghost t Place, ghost msg AbsMessage)

ghost
requires writeBatch_p(t, msgs)
pure func get_writeBatch_t1(t Place, msgs AbsMessage) (t1 Place)

// foo (internal)
pred foo(ghost t Place, ghost msg AbsMessage)

ghost
requires foo(t, msg)
pure func get_foo_t1(t Place, msg AbsMessage) (t1 Place)

ghost
requires token(t) && foo(t, msg)
ensures token(t1) && t1 == old(get_foo_t1(t, msg))
func internal_foo(t Place, msg AbsMessage) (t1 Place)