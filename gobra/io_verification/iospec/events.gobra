package iospec

import (
    . "gobra/io_verification/place"
    . "gobra/io_verification/abstract"
    . "gobra/io_verification/fact"
)

// readBatch (BIO)
pred readBatch_p(ghost t Place)

ghost
requires readBatch_p(t)
pure func get_readBatch_t1(t Place) (t1 Place)

ghost
requires readBatch_p(t)
pure func get_readBatch_msgs(t Place) (msgs seq[AbsMessage])

// decodePkt (internal)
pred decodePkt_p(ghost t Place, ghost m AbsMessage, ghost res AbsSCION)

ghost
requires decodePkt_p(t, m, res)
pure func get_decodePkt_t1(t Place, m AbsMessage, res AbsSCION) (t1 Place)

ghost
requires token(t) && decodePkt_p(t, m, res)
ensures token(t1) && t1 == old(get_decodePkt_t1(t, m, res))
func decodePkt_f(t Place, m AbsMessage, res AbsSCION) (t1 Place)

// processIntraBFD (internal)
pred processIntraBFD_p(ghost t Place, ghost s AbsSCION)

ghost
requires processIntraBFD_p(t, s)
pure func get_processIntraBFD_t1(t Place, s AbsSCION) (t1 Place)

ghost
requires processIntraBFD_p(t, s)
pure func get_processIntraBFD_res(t Place, s AbsSCION) (res AbsProcessResult)

ghost
requires token(t) && processIntraBFD_p(t, s)
ensures token(t1) && t1 == old(get_processIntraBFD_t1(t, s))
ensures res == old(get_processIntraBFD_res(t, s))
func processIntraBFD_f(t Place, s AbsSCION) (t1 Place, res AbsProcessResult)

// processInterBFD (internal)
pred processInterBFD_p(ghost t Place, ghost s AbsSCION)

ghost
requires processInterBFD_p(t, s)
pure func get_processInterBFD_t1(t Place, s AbsSCION) (t1 Place)

ghost
requires processInterBFD_p(t, s)
pure func get_processInterBFD_res(t Place, s AbsSCION) (res AbsProcessResult)

ghost
requires token(t) && processInterBFD_p(t, s)
ensures token(t1) && t1 == old(get_processInterBFD_t1(t, s))
ensures res == old(get_processInterBFD_res(t, s))
func processInterBFD_f(t Place, s AbsSCION) (t1 Place, res AbsProcessResult)

// processOHP (internal)
pred processOHP_p(ghost t Place, ghost s AbsSCION, ghost res AbsProcessResult)

ghost
requires processOHP_p(t, s, res)
pure func get_processOHP_t1(t Place, s AbsSCION, res AbsProcessResult) (t1 Place)

ghost
requires token(t) && processOHP_p(t, s, res)
ensures token(t1) && t1 == old(get_processOHP_t1(t, s, res))
func processOHP_f(t Place, s AbsSCION, res AbsProcessResult) (t1 Place)

// processSCION (internal)
pred processSCION_p(ghost t Place, ghost s AbsSCION, ghost res AbsProcessResult)

ghost
requires processSCION_p(t, s, res)
pure func get_processSCION_t1(t Place, s AbsSCION, res AbsProcessResult) (t1 Place)

ghost
requires token(t) && processSCION_p(t, s, res)
ensures token(t1) && t1 == old(get_processSCION_t1(t, s, res))
func processSCION_f(t Place, s AbsSCION, res AbsProcessResult) (t1 Place)

// packPkt (internal)
pred packPkt_p(ghost t Place, ghost pr AbsProcessResult, ghost res AbsMessage)

ghost
requires packPkt_p(t, pr, res)
pure func get_packPkt_t1(t Place,  pr AbsProcessResult, res AbsMessage) (t1 Place)

ghost
requires token(t) && packPkt_p(t, pr, res)
ensures token(t1) && t1 == old(get_packPkt_t1(t, pr, res))
func packPkt_f(t Place,  pr AbsProcessResult, res AbsMessage) (t1 Place)

// writeBatch (BIO)
pred writeBatch_p(ghost t Place, ghost msg AbsMessage)

ghost
requires writeBatch_p(t, msgs)
pure func get_writeBatch_t1(t Place, msgs AbsMessage) (t1 Place)