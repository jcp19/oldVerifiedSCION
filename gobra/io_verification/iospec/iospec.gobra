package iospec

import (
    . "gobra/io_verification/place"
    . "gobra/io_verification/fact"
    . "gobra/io_verification/message"
)

pred P(pl Place, ghost s mset[Fact]) {
	P_recvBatch(pl, s) &&
    P_sendBatch(pl, s)
}

pred P_recvBatch(pl Place, ghost s mset[Fact]) {
    recvBatch(pl) && P(get_recvBatch_t1(pl), s union mset[Fact]{ inFact(get_recvBatch_msgs(pl)) })
}

pred P_sendBatch(pl Place, ghost s mset[Fact]) {
    forall m Messages :: (outFact(m) # s) > 0 ==> sendBatch(pl, m) && P(get_sendBatch_t1(pl, m), s setminus mset[Fact]{ outFact(m) })
}