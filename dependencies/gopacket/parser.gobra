package gopacket

type DecodingLayer interface {
	// DecodeFromBytes(data []byte, df DecodeFeedback) error
	// CanDecode() LayerClass
	// NextLayerType() LayerType
	// LayerPayload() []byte
}

type DecodingLayerParser struct {
	// DecodingLayerParserOptions
	// dlc   DecodingLayerContainer
	// first LayerType
	// df    DecodeFeedback

	// decodeFunc DecodingLayerFunc

	// Truncated bool
}

func NewDecodingLayerParser(first LayerType, decoders ...DecodingLayer) *DecodingLayerParser

//requires forall i int :: 0 <= i && i < len(data) ==> acc(&data[i])
//requires acc(decoded) && forall i int :: 0 <= i && i < len(*decoded) ==> acc(&(*decoded)[i])
//ensures forall i int :: 0 <= i && i < len(data) ==> acc(&data[i])
//ensures acc(decoded) && forall i int :: 0 <= i && i < len(*decoded) ==> acc(&(*decoded)[i])
func (l *DecodingLayerParser) DecodeLayers(data []byte, decoded *[]LayerType) (err error)

type UnsupportedLayerType LayerType

func (e UnsupportedLayerType) Error() string